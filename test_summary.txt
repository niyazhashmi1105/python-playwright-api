============================= test session starts ==============================
platform darwin -- Python 3.12.6, pytest-8.3.3, pluggy-1.5.0 -- /Users/mdniyazhashmi/PycharmProjects/python-api-automation/pythonProject1/.venv/bin/python
cachedir: .pytest_cache
metadata: {'Python': '3.12.6', 'Platform': 'macOS-15.0.1-arm64-arm-64bit', 'Packages': {'pytest': '8.3.3', 'pluggy': '1.5.0'}, 'Plugins': {'html': '4.1.1', 'metadata': '3.1.1', 'Faker': '30.3.0'}}
rootdir: /Users/mdniyazhashmi/PycharmProjects/python-api-automation/pythonProject1
configfile: pytest.ini
plugins: html-4.1.1, metadata-3.1.1, Faker-30.3.0
collecting ... collected 6 items

tests/test_booking_apis.py::test_get_all_bookings PASSED                 [ 16%]
tests/test_booking_apis.py::test_create_booking PASSED                   [ 33%]
tests/test_booking_apis.py::test_get_booking_by_id PASSED                [ 50%]
tests/test_booking_apis.py::test_update_booking_by_id FAILED             [ 66%]
tests/test_booking_apis.py::test_partial_update_booking_by_id PASSED     [ 83%]
tests/test_booking_apis.py::test_delete_booking_by_id PASSED             [100%]

=================================== FAILURES ===================================
__________________________ test_update_booking_by_id ___________________________

api_client = <utils.api_client.APIClient object at 0x106fabf50>
auth_token = 'd03f781d8e85d85'
load_data = {'booking_details_data': {'additionalneeds': 'Breakfast', 'bookingdates': {'checkin': '2018-01-01', 'checkout': '2019-01-01'}, 'depositpaid': True, 'firstname': 'Jim', ...}, 'partial_update': {'firstname': 'James', 'lastname': 'Brown'}}
generate_lastname = 'Kelly'

    @pytest.mark.usefixtures()
    def test_update_booking_by_id(api_client,auth_token,load_data,generate_lastname):
        booking_id = globals.booking_id
        #print(booking_id)
    
        headers = {
            "Content-Type": "application/json",
            "Cookie": f"token = {auth_token}"
        }
        boooking_details = load_data["booking_details_data"]
        lname = generate_lastname
        boooking_details['lastname'] = lname
    
        response = api_client.update_booking_by_id("booking", booking_id, boooking_details, headers)
>       assert response.status_code == 201, f"Invalid status code got {response.status_code}"
E       AssertionError: Invalid status code got 200
E       assert 200 == 201
E        +  where 200 = <Response [200]>.status_code

tests/test_booking_apis.py:68: AssertionError
- Generated html report: file:///Users/mdniyazhashmi/PycharmProjects/python-api-automation/pythonProject1/reports/report.html -
=========================== short test summary info ============================
FAILED tests/test_booking_apis.py::test_update_booking_by_id - AssertionError: Invalid status code got 200
assert 200 == 201
 +  where 200 = <Response [200]>.status_code
========================= 1 failed, 5 passed in 8.75s ==========================
